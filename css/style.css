/* Step 1. Here, I animated the logo using @keyframes. The animation starts at a width of 25px and grows to 475px; starts with an opacity of 0 and ends with an opacity of 1; takes 3 seconds and only happens when the page is loaded.*/

@keyframes logo-expand {
    0%   {width: 25px; opacity: 0;}
    100% {width: 475px; opacity: 1;}
}

#logo {
    animation: logo-expand 5s forwards;
  }

/* Step 2. I edited the body element to use the Poppins font (using Google fonts) with serif as a backup. I've also used the image “concrete_seamless.png” as a background image with a backup color of #f1f1f1. */

body {
    font-family: "Poppins", serif;
    background-image: url("../images/concrete_seamless.png");
    background-color: #f1f1f1;
}

/* Step 3. I edited the css for the header tag (all instances) to use flex to match the provided example.*/
 header {
    display: flex;
    flex-direction: column;
    align-items: center;
 }

/* Step 4. I edited the css for the nav_links class to use flex to match the provided example.  */
.nav_links {
    display: flex;
    flex-direction: column;
}

/* Step 5. I styled the links so that they have the same color (blue) even after they have been visited.  */

a:link, a:visited {
    color: blue;
    }
/* Step 6a. I styled only header elements that are direct children of a card class.  The styling includes: background: #288088; solid 2px border using #45ADAD; 20px of padding on the top and the bottom; 50px border-radius on the top left and right corners. */

.card > header {
    background-color: #288088;
    border: 2px solid #45ADAD;
    /* padding-top: 20px;
    padding-bottom: 20px; */
    padding: 20px 0;
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
}

/* Step 6b. The corners were funky, with whitespace showing. Below, I've adjusted the container's border so it doesn't show.*/

/* Step 7: I edit the css for the card class to match the provided example. I used flex-basis to specify an initial “size” of 450px. */
.card {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex-basis: 450px;
    width: 100%;
    margin: 12px;
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    padding: 0 0 25px 0;

}

/* Step 8: I edited the css for the pricing class to match the provided example. The cards are centered both horizontally and vertically using justify-content and align-items.*/
.pricing {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    max-width: 75%;
    margin: 0 auto;
}

/* Step 9: I styled the images in the gallery class to have a solid 10px border with a color of #50C7C7, 10px margin on all four sides and a width of 300px.*/

.gallery img {
    border: 10px solid #50C7C7;
    margin: 10px;
    width: 300px;
}

/* Step 10: I edited the css for the gallery class to use flex to match the provided example.*/
.gallery {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}


/* Media Query 1: For when the screen size is greater than 900px*/
@media screen and (min-width: 900px) {
    /* Step 11. I edited the css for the header tag (all instances) and the nav_links class to match the provided example using flex-properties. The logo is positioned as far to the left as possible and the links as far to the right as possible.*/
    header {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
    }
    .nav_links {
        display: flex;
        flex-direction: row;
    }

    /* Step 12. I edited the css for the pricing and card classes to match the provided example. I used flex-basis to specify a “size” of 275px. Elements do not have the same height, but have the same width. */

    .pricing {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: center;
        justify-content: center;
    }

    .card {
        display: flex;
        flex-direction: column;
        flex-basis: 275px;
    }

    /* Step 13. I modified the first header (the one not inside main) so that it remains visible at the top of the screen even as we scroll down.*/
    body > header {
        position: sticky;
        top: 0;
    }
}

/* Step 14. Used prefers-reduced-motion: reduce to ensure the logo should appear but not be animated if prefers-reduced-motion is selected in the accessibility preferences. 
 */
@media (prefers-reduced-motion: reduce) {
    #logo {
        animation: none;
        width: 475px;
        opacity: 1;
    }
}

/* Specifications for printing in portrait mode */
@media print {
    /* Step 15. I changed the font on the body to Arial with a backup value of Helvetica */
    body {
        font-family: Arial, Helvetica, sans-serif;

        /* Step 16. I removed the background image*/
        background-image: none;
    }
    

     
    /* Step 17. I edited the nav/nav_links elements so that they are spaced evenly according to the example image. */
    nav {
        display: flex;
        flex-direction: row;
        justify-content: space-evenly;
        align-items: center;
    }
    
    .nav_links {
        display: flex;
        flex-direction: row;
        gap: 80%;
        justify-content: center;
    }
    
    /* Step 18. I edited the pricing class so that the elements align along the bottom.*/
    .pricing {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        align-items: flex-end;
        justify-content: center;
    }
    

    /* Step 19. Styled the card elements to have a solid border 2px of #45ADDD and used flex-basis of 325px.  */

    /* Simply cannot figure out how to get the containers wider to not cut off the button text */

    .card {
        border: 2px solid #45ADDD;
        flex-basis: 1 1 325px;
        display: flex;
        flex-direction: column;
        break-inside: avoid;
        flex-wrap: nowrap;
        box-sizing:border-box;
        flex-grow: 1;
    }


    /* Step 20: Ensured no part of the gallery is visible in Print view. */

    .gallery, #gallery {
        display: none;
    }

    /* Step 21: Added a thumbs up entity to match the provided example. */
.card li:nth-child(even):after {
    content: "\01F44D";
  }
  }